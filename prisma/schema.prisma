// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts      Account[]
  sessions      Session[]
  azkarProgress AzkarProgress[]
  tasbihCounts  TasbihCount[]
  bookmarks     Bookmark[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model AzkarCategory {
  id          String @id @default(cuid())
  name        String @unique
  nameAr      String
  description String?
  descriptionAr String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  azkar Azkar[]
}

model Azkar {
  id          String @id @default(cuid())
  title       String
  titleAr     String
  arabicText  String
  translation String
  reference   String?
  times       Int    @default(1)
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category AzkarCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  progress AzkarProgress[]
  bookmarks Bookmark[]

  @@unique([title, categoryId])
}

model AzkarProgress {
  id        String   @id @default(cuid())
  userId    String
  azkarId   String
  completed Int      @default(0)
  date      DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  azkar Azkar @relation(fields: [azkarId], references: [id], onDelete: Cascade)

  @@unique([userId, azkarId, date])
}

model TasbihCount {
  id        String   @id @default(cuid())
  userId    String
  count     Int      @default(0)
  date      DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Bookmark {
  id        String   @id @default(cuid())
  userId    String
  azkarId   String
  createdAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  azkar Azkar @relation(fields: [azkarId], references: [id], onDelete: Cascade)

  @@unique([userId, azkarId])
}
